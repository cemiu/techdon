# This file is in the OpenAPI 3.0.1 format
# and can be viewed in the Swagger Editor
# under the URL: https://editor.swagger.io/

# still missing some endpoints to resolve static data
# (e.g. list of all device types supported on our platform)
# also still missing the admin endpoints (verification, etc [?])

openapi: 3.0.1
info:
  title: TechDon
  description: This is the REST API documentation for the end points for TechDon
    platform will allow students to sign up, register for items and receive them in
    a simple, easy and straight forward procedure. The main aim of the platform is
    to provide students from a less privileged backgrounds to be able to apply for
    electronics to be donated which in turn will assist them in their educational
    studies. We will integrate a first come first served online que system where students
    can apply and wait there turn to be donated electrical goods. Our purpose behind
    this procedure is to insure a fair and easy process o deciding who justifies to
    be given the device first.  We will incorporate an ID check system where students
    must upload their id to ensure they are eligible to receive the device. Donators
    can be an individual or a company looking to help better the quality of education
    of students. This will be done by them uploading pictures of the device which
    later found student to be donated to , contacts will be exchanged to be able to
    finalize the donation , if itâ€™s a in person or shipped delivery.
  termsOfService: http://localhost:8080
  contact:
    email: 2026156@Brunel.ac.uk
  license:
    name: Thoybur Rohman / Philipp Bibik
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.1.0
servers:
- url: https://Group50/v1
tags:
- name: user
  description: Endpoints related to general account management
  externalDocs:
    description: General account related queries like account creation, deletion, preferences, login, etc.
    url: http://localhost:8080/user
- name: donor
  description: Endpoints for users of the donor account type
  externalDocs:
    description: TechDon
    url: http://localhost:8080/donor
- name: student
  description: Endpoints for users of the student account type
  externalDocs:
    description: TechDon
    url: http://localhost:8080/student
paths:
  /user/register:
    post:
      tags:
      - user
      summary: Endpoint for creating new user
      description: This REST API endpoint is used to create a new user. All fields are mandatory. Returns an auth token and user type if the registration was successful, otherwise it returns 400 (missing fields / wrong formats / etc.)
      operationId: createUser
      parameters:
      - name: firstName
        in: query
        description: First Name
        required: true
        schema:
          type: string
      - name: lastName
        in: query
        description: Last Name
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: Email Address
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Clear text password
        required: true
        schema:
          type: string
      - name: phone
        in: query
        description: Phone number
        required: true
        schema:
          type: string
      - name: userType
        in: query
        description: User type (student / donor)
        required: true
        schema:
          type: string
      - name: address
        in: query
        description: User address, as string array containing 3-5 values
        required: true
        style: form
        explode: false
        schema:
          maxItems: 5
          minItems: 3
          type: array
          items:
            type: string
      responses:
        200:
          description: Successfully created the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authenticationToken'
        400:
          description: Account creation failed
  /user/login:
    get:
      tags:
      - user
      summary: Endpoint for logging in
      description: This is the endpoint for logging in as a user. Required are an email and a password. If they match up with an entry in the database, a new auth token is generated and returned to the user, along with the user type. Otherwise 400 is returned.
      operationId: loginUser
      parameters:
      - name: email
        in: query
        description: Email for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Clear-text password
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authenticationToken'
        400:
          description: Invalid parameters
        401:
          description: Invalid username/password combination
  /user/logout:
    post:
      tags:
      - user
      summary: Endpoint for terminating user session / logging out
      description: Marks an authToken supplied by a user as invalid for future sessions, thus logging the user out of their session.
      operationId: logoutUser
      parameters:
      - name: authToken
        in: query
        description: Auth token to prove identity
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully logged out
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /user/account/verifyEmail:
    post:
      tags:
      - user
      summary: Endpoint for verifying email
      description: This end point will be used to verify the email for a user
      operationId: Verify
      parameters:
      - name: emailAuthToken
        in: query
        description: The unique authentication token sent to user's email
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully verified email
        400:
          description: Invalid parameters
        401:
          description: Unknown token
  /user/account/settings/get:
    get:
      tags:
      - user
      summary: Returns the preferences of an account
      description: This endpoint takes in an auth token and returns all user preferences which can be changed.
      operationId: settings
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: successfully loaded settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechDonUser'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /user/account/settings/update:
    post:
      tags:
      - user
      summary: Updating specified fields related to users
      description: Endpoint to update the account preferences of a user. Expected are a valid auth token and any number of user fields which are to be updated. Only the fields which are given as input are updated in the database. Returns the new user preferences if the operation was successful, otherwise 400.
      operationId: getUserByName
      parameters:
      - name: authToken
        in: query
        description: Authentication token to prove identity
        required: true
        schema:
          type: string
      - name: firstName
        in: query
        description: New first Name
        schema:
          type: string
      - name: lastName
        in: query
        description: New Last Name
        schema:
          type: string
      - name: email
        in: query
        description: New Email Address
        schema:
          type: string
      - name: password
        in: query
        description: New clear text password
        schema:
          type: string
      - name: phone
        in: query
        description: New phone number
        schema:
          type: string
      - name: address
        in: query
        description: New user address, as string array containing 3-5 values
        style: form
        explode: false
        schema:
          maxItems: 5
          minItems: 3
          type: array
          items:
            type: string
      responses:
        200:
          description: Successfully updated account (returns new account state excluding the password)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechDonUser'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /user/delete:
    delete:
      tags:
      - user
      summary: Delete an account
      description: This endpoint deletes an account and all associated data. Expects a valid auth token and returns 200 if the deletion was successful, 401 otherwise.
      operationId: deleteUser
      parameters:
      - name: authToken
        in: query
        description: Auth token to prove identity
        required: true
        schema:
          type: string
      #- name: password
      #  in: query
      #  description: The password it required to assue that account deletion cannot
      #    happen on accident
      #  required: true
      #  schema:
      #    type: string
      responses:
        200:
          description: Successfully deleted the account
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /donor/device/new:
    post:
      tags:
      - donor
      summary: List a new device for donation
      description: Endpoint for listing a new device for donation on the platform. Requires an authToken of a donor account and the required fields to by supplied. Device description and photos are optional.
      operationId: UploadItem
      parameters:
      - name: authToken
        in: query
        description: Auth token to prove identity
        required: true
        schema:
          type: string
      - name: productType
        in: query
        description: Type of donated product (laptop / monitor / etc.)
        required: true
        schema:
          type: string
      - name: productName
        in: query
        description: Name of the product
        required: true
        schema:
          type: string
      - name: productLocation
        in: query
        description: Location of product (City or Postcode)
        required: true
        schema:
          type: string
      - name: productDescription
        in: query
        description: Optional description of the product
        schema:
          type: string
      responses:
        200:
          description: Device uploaded successfully
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /donor/device/listedDevices:
    get:
      tags:
      - donor
      summary: Get list of donated devices
      description: This endpoint returns a list of all devices listed by a donor as a
        String Array ["0b52b9a5-0737-4762-b628-b55eb988744c", "6920289b-d447-4fdb-b178-03e4562a9839", "3127fec8-5bc3-4ac8-b831-697e831581dc", ...]
      operationId: getDevices
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of device IDs which belong to user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /donor/device/load:
    get:
      tags:
      - donor
      summary: Load information about a donated device
      description: Endpoint for donors to load information about a device which has been donated by them. Expects an auth token and device id
      operationId: loadDevices
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceId
        in: query
        description: ID of device to be loaded
        required: true
        schema:
          type: string
      responses:
        200:
          description: Device data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevice'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /donor/device/remove:
    delete:
      tags:
      - donor
      summary: Remove donated device
      description: This endpoint is for donor to remove devices they have listed from the platform. 
      operationId: DeviceRemove
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceId
        in: query
        description: ID of device to be removed
        required: true
        schema:
          type: string
      responses:
        200:
          description: Device succfully removed
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /donor/device/update:
    post:
      tags:
      - donor
      summary: Update device info
      description: Endpoint for updating the information of a device. Requires the authToken and deviceId to specify which device is to be updated and prove authorization, along with any number of device fields and the new values they should be set to. Unspecified values are not to be changed. Returns the new device state.
      operationId: Update
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceId
        in: query
        description: ID of device to be removed
        required: true
        schema:
          type: string
      - name: productType
        in: query
        description: Type of donated product (laptop / monitor / etc.)
        schema:
          type: string
      - name: productName
        in: query
        description: Name of the product
        schema:
          type: string
      - name: productLocation
        in: query
        description: Location of product (City or Postcode)
        schema:
          type: string
      - name: productDescription
        in: query
        description: Optional description of the product
        schema:
          type: string
      responses:
        200:
          description: Device updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevice'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /student/devices/setPreferences:
    post:
      tags:
      - student
      summary: Set student device preferences
      description: This endpoint is used by students to select which kinds of device they and interested in, and thus would want to be considered for.
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceTypes
        in: query
        description: Strings array containing enumeration of devices
        required: true
        schema:
          type: array
          items:
            type: string
      - name: userLocation
        in: query
        description: Location of the user, to base in-person collection selection on
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully set preferences
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /student/devices/loadPreferences:
    get:
      tags:
      - student
      summary: This allows students to load their device preferences
      description: This endpoint is used to load the device preferences specified by a user. Returns an enumeration of device types selected by the student in form of a string array along with the location the student set.
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful loaded loadPreferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /student/devices/offeredDevices:
    get:
      tags:
      - student
      summary: Returns array containing IDs of devices ready to be claimed by student
      description: Returns a list of devices available to be claimed by a student in form of a string array
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: Device list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /student/devices/load:
    get:
      tags:
      - student
      summary: Returns the device details of a device either offered or claimed by a student
      description: Loads information about a device offered to a user [same as donor/device/load,
        just for students]
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceID
        in: query
        description: ID of device to be loaded
        required: true
        schema:
          type: string
      responses:
        200:
          description: Device data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevice'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /student/devices/claim:
    get:
      tags:
      - student
      summary: Endpoint for students to claim device
      description: This endpoint is used by students to claim a device that has been offered to them. If claim is successful, the point returns contact information of the donor. The student and donor are also sent this information in email form.
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceID
        in: query
        description: ID of device to be claimed
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/claim'
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
  /student/devices/decline:
    post:
      tags:
      - student
      summary: Endpoint for students to devlice a device
      description: This endpoint is used by students to decline a device that has been offered to them. 
      parameters:
      - name: authToken
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceID
        in: query
        description: ID of device to be declined
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully declined
        400:
          description: Invalid parameters
        401:
          description: Could not authenticate
components:
  schemas:
    TechDonUser:
      type: object
      properties:
        firstName:
          type: string
          example: Alex
        lastName:
          type: string
          example: Smith
        email:
          type: string
          example: 2026156@brunel.ac.uk
        phone:
          type: string
          example: "07547878777"
        userType:
          type: integer
          description: User Status
          format: int32
        address:
          type: array
          description: 'Address feilds'
          example:
          - Flat2
          - Wensley Street
          - Uxbridge
          - UB1 5DF
          items:
            type: string
    authenticationToken:
      type: object
      properties:
        authToken:
          type: string
          example: seEWMrPzE7Ee7fUUas8pw4Vks3mnLZNGFhzevLMETTXn3
        userType:
          type: string
          example: student / donor
    getDevice:
      type: object
      properties:
        deviceType:
          type: string
          format: string
          example: laptop
        deviceName:
          type: string
          example: HP 14in Ryzen 3 4GB 128GB FHD Laptop - Black
        deviceLocation:
          type: string
          example: London
        deviceDescription:
          type: string
          example: Slightly used, but in good condition. Collection only.
    claim:
      type: object
      properties:
        ItemNumber:
          type: string
          format: 'String or Number'
          example: HP laptop
        address:
          type: array
          description: Address feilds
          example:
          - Flat2
          - Wensley Street
          - Uxbridge
          - UB1 5DF
          items:
            type: string
        contactEmail:
          type: string
          example: hello123@example.com
        contactPhoneNumber:
          type: string
          example: +4414060391
    device:
      type: array
      description: 'List of device IDs'
      example:
      - "0b52b9a5-0737-4762-b628-b55eb988744c"
      - "6920289b-d447-4fdb-b178-03e4562a9839"
      - "3127fec8-5bc3-4ac8-b831-697e831581dc"
      items:
        type: string
