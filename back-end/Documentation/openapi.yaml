openapi: 3.0.1
info:
  title: TechDonate
  description: This is the REST API documentation for the end points for TechDonates
    platform will allow students to sign up, register for items and receive them in
    a simple, easy and straight forward procedure. The main aim of the platform is
    to provide students from a less privileged backgrounds to be able to apply for
    electronics to be donated which in turn will assist them in their educational
    studies. We will integrate a first come first served online que system where students
    can apply and wait there turn to be donated electrical goods. Our purpose behind
    this procedure is to insure a fair and easy process o deciding who justifies to
    be given the device first.  We will incorporate an ID check system where students
    must upload their id to ensure they are eligible to receive the device. Donators
    can be an individual or a company looking to help better the quality of education
    of students. This will be done by them uploading pictures of the device which
    later found student to be donated to , contacts will be exchanged to be able to
    finalize the donation , if itâ€™s a in person or shipped delivery.
  termsOfService: http://localhost:8080
  contact:
    email: 2026156@Brunel.ac.uk
  license:
    name: Thoybur Rohman
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://Group50/v1
- url: http://Group50/v1
tags:
- name: user
  description: Operations about user . This end point will be all things the user
    in genral will use to  communicate with Tech donates website , this includes registering
    for an account , making changes to the profile , login , log out and delete .
    further information can be found in the end point description
  externalDocs:
    description: all things to do with the user login or logout/ delete and register
      to the platform
    url: http://localhost:8080/user
- name: donate
  description: This endpoint is focused on the donation side of the website , here
    we can find the api for uplaoding , applying for a device. futhermore useres can
    see what they have applied for or can as well as uplaoded
  externalDocs:
    description: TechDonate
    url: http://localhost:8080/donate
- name: student
  description: This endpoint pupose is to allow a student to apply / see available
    ietms as well as claim any they have gotten . futher explination has been done
    in each endpoint
  externalDocs:
    description: TechDonate api
    url: http://localhost:8080/student
paths:
  /user/register:
    post:
      tags:
      - user
      summary: Endpoint for creating new user
      description: This rest api endpoint is used to create a new user for Yech donate.
        The inputs taken in have been specified as well as examples given to show
        case it . The user would enter these inputs and in retuen get a responce of
        200 which would alos auto log them in alloing an authetication toke
      operationId: createUser
      parameters:
      - name: firstName
        in: query
        description: First Name
        required: true
        schema:
          type: string
      - name: lastName
        in: query
        description: Last Name
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: Email Address
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Clear text password
        required: true
        schema:
          type: string
      - name: phone
        in: query
        description: Phone number
        required: true
        schema:
          type: string
      - name: userType
        in: query
        description: User type (student / donor)
        required: true
        schema:
          type: string
      - name: address
        in: query
        description: User address, as string array containing 3-5 values
        required: true
        style: form
        explode: false
        schema:
          maxItems: 5
          minItems: 3
          type: array
          items:
            type: string
      responses:
        200:
          description: account creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authenticationToken'
  /user/login:
    get:
      tags:
      - user
      summary: Endpoint for logging in
      description: This is the login authetication for TechDonate . When the user
        inputs the correct credentials they are given a token which will allow them
        ti use the platform and stya logged in , this api takes input of string and
        gives a token as reponce
      operationId: loginUser
      parameters:
      - name: email
        in: query
        description: The email for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authenticationToken'
        400:
          description: Invalid username/password supplied
          content: {}
  /user/logout:
    get:
      tags:
      - user
      summary: Endpoint for terminating user session / logging out
      description: checks token to autheticate it
      operationId: logoutUser
      parameters:
      - name: auth_token
        in: query
        description: Authentication token to prove identity
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
        400:
          description: could not authenticate
          content: {}
  /user/update:
    get:
      tags:
      - user
      summary: Updating specified fields related to users
      description: This rest end point will be used to allow  a user to update there
        profile. the same api can be used to also delete a persons account the responce
        for this can be found at the bottom
      operationId: getUserByName
      parameters:
      - name: auth_token
        in: query
        description: Authentication token to prove identity
        required: true
        schema:
          type: string
      - name: firstName
        in: query
        description: New first Name
        schema:
          type: string
      - name: lastName
        in: query
        description: New Last Name
        schema:
          type: string
      - name: email
        in: query
        description: New Email Address
        schema:
          type: string
      - name: password
        in: query
        description: New clear text password
        schema:
          type: string
      - name: phone
        in: query
        description: New phone number
        schema:
          type: string
      - name: address
        in: query
        description: New user address, as string array containing 3-5 values
        style: form
        explode: false
        schema:
          maxItems: 5
          minItems: 3
          type: array
          items:
            type: string
      responses:
        200:
          description: successfully updated account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechDonateUser'
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: User not found
          content: {}
  /user/account/verifyEmail:
    get:
      tags:
      - user
      summary: Endpoint for verifying email
      description: This end point will be used to verify the email for a user
      operationId: Verify
      parameters:
      - name: email
        in: query
        description: The email for login
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authenticationTokenEmail'
        400:
          description: Invalid username/password supplied
          content: {}
  /user/account/settings/get:
    get:
      tags:
      - user
      summary: API to get settings for techDonate
      description: This is the rest api to get the settings for the rest api for TechDonate
        , there the user would input there settings
      operationId: settings
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: successfully loaded settings
          content: {}
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: User not found
          content: {}
  /user/account/settings/update:
    post:
      tags:
      - user
      summary: Endpoint Updating user setting
      description: ' This is the EndPoint for updating the user settings update'
      operationId: update User
      parameters:
      - name: firstName
        in: query
        description: First Name
        required: true
        schema:
          type: string
      - name: lastName
        in: query
        description: Last Name
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: Email Address
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Clear text password
        required: true
        schema:
          type: string
      - name: phone
        in: query
        description: Phone number
        required: true
        schema:
          type: string
      - name: userType
        in: query
        description: User type (student / donor)
        required: true
        schema:
          type: string
      - name: address
        in: query
        description: User address, as string array containing 3-5 values
        required: true
        style: form
        explode: false
        schema:
          maxItems: 5
          minItems: 3
          type: array
          items:
            type: string
      responses:
        200:
          description: Account updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechDonateUser'
  /user/delete:
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: auth_token
        in: query
        description: Authentication token to prove identity
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password it required to assue that account deletion cannot
          happen on accident
        required: true
        schema:
          type: string
      responses:
        200:
          description: successfully deleted account
          content: {}
        400:
          description: Cannot find user
          content: {}
        401:
          description: Wrong password
          content: {}
  /donate/device/new:
    post:
      tags:
      - donate
      summary: List a new device for donation
      description: using this end point a person will be able to upload a new item
        and specify in the feaild and give it description . This is a post method
        which takes in input of string
      operationId: UploadItem
      parameters:
      - name: auth_token
        in: query
        description: Authentication token to prove identity
        required: true
        schema:
          type: string
      - name: productType
        in: query
        description: Type of donated product (laptop / monitor / etc.)
        required: true
        schema:
          type: string
      - name: productName
        in: query
        description: Name of the product
        required: true
        schema:
          type: string
      - name: productLocation
        in: query
        description: Location of product (City or Postcode)
        required: true
        schema:
          type: string
      - name: productDescription
        in: query
        description: Optional description of the product
        schema:
          type: string
      responses:
        200:
          description: successful uploaded device
          content: {}
        400:
          description: invalid uplaod
          content: {}
  /donate/device/listedDevices:
    get:
      tags:
      - donate
      summary: Get list of donated devices
      description: This endpoint returns a list of all devices listed by them as a
        String Array ["106073", "460315", etc.]
      operationId: getDevices
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of device IDs which belong to user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: Invalid authentication
          content: {}
  /donate/device/load:
    get:
      tags:
      - donate
      summary: Load information about donated device
      description: Endpoint to load detailed information about a device which has
        been donated by them
      operationId: loadDevices
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceID
        in: query
        description: ID of device to be loaded
        required: true
        schema:
          type: string
      responses:
        200:
          description: successfuly selected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevice'
        400:
          description: invalid selection
          content: {}
  /donate/device/remove:
    get:
      tags:
      - donate
      summary: Get list of donated devices
      description: This endpoint returns a list of all devices listed by them as a
        String Array ["106073", "460315", etc.]
      operationId: Device Remove
      parameters:
      - name: Device number
        in: query
        description: User enters device number which is to be removed
        required: true
        schema:
          type: string
      responses:
        200:
          description: Device succfully removed
          content: {}
        400:
          description: Device Not found please try again
          content: {}
  /donate/device/update:
    post:
      tags:
      - donate
      summary: 'Device update '
      description: This is the rest api for the device update
      operationId: Update
      parameters:
      - name: auth_token
        in: query
        description: Authentication token to prove identity
        required: true
        schema:
          type: string
      - name: productType
        in: query
        description: Type of donated product (laptop / monitor / etc.)
        required: true
        schema:
          type: string
      - name: productName
        in: query
        description: Name of the product
        required: true
        schema:
          type: string
      - name: productLocation
        in: query
        description: Location of product (City or Postcode)
        required: true
        schema:
          type: string
      - name: productDescription
        in: query
        description: Optional description of the product
        schema:
          type: string
      responses:
        200:
          description: successful updated device
          content: {}
        400:
          description: invalid selection please try again
          content: {}
  /student/devices/setPreferences:
    post:
      tags:
      - student
      summary: This allows user to set the device prefernce
      description: Using This Rest API a user can set the device prefernce
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceType
        in: query
        description: First Name
        required: true
        schema:
          type: string
      - name: deviceLocation
        in: query
        description: Locatin of the area
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful set Preferences
          content: {}
        400:
          description: invalid input
          content: {}
  /student/devices/loadPreferences:
    get:
      tags:
      - student
      summary: This allows user to load there device prefernce
      description: Using This Rest API a user can load the device prefernce
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful loaded loadPreferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: invalid selection
          content: {}
  /student/devices/offeredDevices:
    get:
      tags:
      - student
      summary: Returnes array containing IDs of devices ready to be claimed by user
      description: here a user can load all the avaialbel anf offer devices to them
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: invalid selection
          content: {}
  /student/devices/load:
    get:
      tags:
      - student
      summary: Returns device details of device offered / claimed by student
      description: loads information about device offered to user [same as donate/device/load,
        just for students
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceID
        in: query
        description: ID of device to be loaded
        required: true
        schema:
          type: string
      responses:
        200:
          description: successfullty loaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevice'
        400:
          description: invalid selection
          content: {}
  /student/devices/claim:
    get:
      tags:
      - student
      summary: Endpoint for studetns to claim device
      description: After the user has been given an email confirmation of the validation
        of there item they can proceed to claim it. This input is a get input and
        does not take any input in except the login token the responce is string and
        an example is givn.
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceID
        in: query
        description: ID of device to be loaded
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/claim'
        400:
          description: invalid selection
          content: {}
  /student/devices/decline:
    get:
      tags:
      - student
      summary: Endpoint for studetns to claim device
      description: After the user has been given an email confirmation of the validation
        of there item they can proceed to claim it. This input is a get input and
        does not take any input in except the login token the responce is string and
        an example is givn.
      parameters:
      - name: auth_token
        in: query
        description: Auth token for authentication
        required: true
        schema:
          type: string
      - name: deviceID
        in: query
        description: ID of device to be loaded
        required: true
        schema:
          type: string
      responses:
        200:
          description: successfully declined
          content: {}
        400:
          description: invalid selection
          content: {}
components:
  schemas:
    TechDonateUser:
      type: object
      properties:
        firstName:
          type: string
          example: alex
        lastName:
          type: string
          example: ben
        email:
          type: string
          example: 2026156@brunel.ac.uk
        password:
          type: string
          example: password
        phone:
          type: string
          example: "07547878777"
        userType:
          type: integer
          description: User Status
          format: int32
        address:
          type: array
          description: 'Address feilds '
          example:
          - 'Flat2 '
          - Wensley Street
          - Uxbridge
          - UB1 5DF
          items:
            type: string
    authenticationTokenEmail:
      type: object
      properties:
        Email_auth_token:
          type: string
          example: seEWMrPzE7Ee7fUUas8pw4Vks3mnLZNGFhzevLMETTXn3
    authenticationToken:
      type: object
      properties:
        auth_token:
          type: string
          example: seEWMrPzE7Ee7fUUas8pw4Vks3mnLZNGFhzevLMETTXn3
    getDevice:
      type: object
      properties:
        deviceType:
          type: string
          format: string
          example: laptop
        deviceName:
          type: string
          example: HP 14in Ryzen 3 4GB 128GB FHD Laptop - Black
        deviceLocation:
          type: string
          example: London
        deviceDescription:
          type: string
          example: Slightly used, but in good condition. Collection only.
    claim:
      type: object
      properties:
        ItemNumber:
          type: string
          format: 'String or Number '
          example: HP laptop
        address:
          type: array
          description: Address feilds
          example:
          - 'Flat2 '
          - Wensley Street
          - Uxbridge
          - UB1 5DF
          items:
            type: string
        contactEmail:
          type: string
          example: hello123@example.com
        contactPhoneNumber:
          type: string
          example: +4414060391
    device:
      type: array
      description: ' List of device IDs'
      example:
      - "160603"
      - "306073"
      - "440731"
      items:
        type: string
